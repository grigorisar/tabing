{
  "dependencies": {
    "@angular/common": "12.2.17",
    "@angular/compiler": "12.2.17",
    "@angular/core": "12.2.17",
    "@angular/forms": "12.2.17",
    "@angular/platform-browser": "12.2.17",
    "@angular/platform-browser-dynamic": "12.2.17",
    "@devextreme/runtime": "3.0.12",
    "core-js": "2.4.1",
    "devexpress-diagram": "2.2.5",
    "devexpress-gantt": "4.1.51",
    "devextreme": "23.2.5",
    "devextreme-angular": "23.2.5",
    "devextreme-quill": "1.6.4",
    "es6-object-assign": "1.1.0",
    "inferno": "7.4.11",
    "inferno-clone-vnode": "latest",
    "inferno-compat": "latest",
    "inferno-create-class": "latest",
    "inferno-create-element": "7.4.11",
    "inferno-dom": "latest",
    "inferno-extras": "latest",
    "inferno-hydrate": "7.4.11",
    "jszip": "3.10.1",
    "luxon": "1.28.1",
    "prettier": "2.8.4",
    "rrule": "2.6.4",
    "rxjs": "7.5.3",
    "tslib": "2.6.2",
    "zone.js": "0.10.3"
  },
  "description": "The Tabs component allows you to create a tabbed UI to navigate between pages or views. You can create tab items in the items array, or populate tab items from a dataSource.\nCustomize Tab Contents and Appearance\nYou can initialize a tab’s contents (text, icons and badges) with values from underlying data objects. This example demonstrates this technique.\nUse the drop-down editors on the right to change the component's orientation, styling mode, and icon position.\nYou can also specify an item template (itemTemplate) to customize tabs.\nConfigure Overflow Behavior\nThe Tabs component stretches to fit its container if you do not specify the component's width. When the total tab width exceeds the component’s width, navigation buttons appear. A user can click these buttons to scroll through the tabs. Use the showNavButtons and scrollByContent properties to control this behavior.\n",
  "main": "src/app/app.component.ts",
  "name": ""
}